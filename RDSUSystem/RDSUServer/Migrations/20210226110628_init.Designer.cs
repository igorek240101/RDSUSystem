// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RDSUServer.Models;

namespace RDSUServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210226110628_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("RDSUServer.Models.Athletes", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AthletNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id1")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("La")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("St")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isMale")
                        .HasColumnType("INTEGER");

                    b.HasKey("Number");

                    b.HasIndex("AthletNumber");

                    b.HasIndex("Id1");

                    b.HasIndex("TrainerId");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("RDSUServer.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("DanceCategory")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("OldCategory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Protocol")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isSt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_FullNames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AthletNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NewFullName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AthletNumber");

                    b.ToTable("Ch_FullNames");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_LogIns", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isMale")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Ch_LogIns");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_Partnerships", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FromNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromNumber");

                    b.HasIndex("ToNumber");

                    b.ToTable("Ch_Partnerships");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_Transfers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DanserNumber")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DanserWord")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FromWord")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ToWord")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DanserNumber");

                    b.HasIndex("TrainerId");

                    b.ToTable("Ch_Transfers");
                });

            modelBuilder.Entity("RDSUServer.Models.Disqualificatons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Period")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ScorecardId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScorecardId");

                    b.ToTable("Disqualificatons");
                });

            modelBuilder.Entity("RDSUServer.Models.GoodResults", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Placement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ScorecardId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScorecardId");

                    b.ToTable("GoodResults");
                });

            modelBuilder.Entity("RDSUServer.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("RDSUServer.Models.RDSUWorkers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RDSUWorkers");
                });

            modelBuilder.Entity("RDSUServer.Models.Scorecards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Athletes1Number")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Athletes2Number")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Athletes1Number");

                    b.HasIndex("Athletes2Number");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Scorecards");
                });

            modelBuilder.Entity("RDSUServer.Models.Tournaments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlannerFullName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlannerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlannerId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("RDSUServer.Models.Trainers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrainerFullName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("RDSUServer.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RDSUServer.Models.Athletes", b =>
                {
                    b.HasOne("RDSUServer.Models.Athletes", "Athlet")
                        .WithMany()
                        .HasForeignKey("AthletNumber");

                    b.HasOne("RDSUServer.Models.Users", "Id")
                        .WithMany()
                        .HasForeignKey("Id1");

                    b.HasOne("RDSUServer.Models.Trainers", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId");

                    b.Navigation("Athlet");

                    b.Navigation("Id");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("RDSUServer.Models.Categories", b =>
                {
                    b.HasOne("RDSUServer.Models.Tournaments", "Tournament")
                        .WithMany()
                        .HasForeignKey("TournamentId");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_FullNames", b =>
                {
                    b.HasOne("RDSUServer.Models.Athletes", "Athlet")
                        .WithMany()
                        .HasForeignKey("AthletNumber");

                    b.Navigation("Athlet");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_LogIns", b =>
                {
                    b.HasOne("RDSUServer.Models.Trainers", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_Partnerships", b =>
                {
                    b.HasOne("RDSUServer.Models.Athletes", "From")
                        .WithMany()
                        .HasForeignKey("FromNumber");

                    b.HasOne("RDSUServer.Models.Athletes", "To")
                        .WithMany()
                        .HasForeignKey("ToNumber");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("RDSUServer.Models.Ch_Transfers", b =>
                {
                    b.HasOne("RDSUServer.Models.Athletes", "Danser")
                        .WithMany()
                        .HasForeignKey("DanserNumber");

                    b.HasOne("RDSUServer.Models.Trainers", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId");

                    b.Navigation("Danser");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("RDSUServer.Models.Disqualificatons", b =>
                {
                    b.HasOne("RDSUServer.Models.Scorecards", "Scorecard")
                        .WithMany()
                        .HasForeignKey("ScorecardId");

                    b.Navigation("Scorecard");
                });

            modelBuilder.Entity("RDSUServer.Models.GoodResults", b =>
                {
                    b.HasOne("RDSUServer.Models.Scorecards", "Scorecard")
                        .WithMany()
                        .HasForeignKey("ScorecardId");

                    b.Navigation("Scorecard");
                });

            modelBuilder.Entity("RDSUServer.Models.News", b =>
                {
                    b.HasOne("RDSUServer.Models.Trainers", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("RDSUServer.Models.RDSUWorkers", b =>
                {
                    b.HasOne("RDSUServer.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RDSUServer.Models.Scorecards", b =>
                {
                    b.HasOne("RDSUServer.Models.Athletes", "Athletes1")
                        .WithMany()
                        .HasForeignKey("Athletes1Number");

                    b.HasOne("RDSUServer.Models.Athletes", "Athletes2")
                        .WithMany()
                        .HasForeignKey("Athletes2Number");

                    b.HasOne("RDSUServer.Models.Categories", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("RDSUServer.Models.Trainers", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId");

                    b.Navigation("Athletes1");

                    b.Navigation("Athletes2");

                    b.Navigation("Category");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("RDSUServer.Models.Tournaments", b =>
                {
                    b.HasOne("RDSUServer.Models.RDSUWorkers", "Planner")
                        .WithMany()
                        .HasForeignKey("PlannerId");

                    b.Navigation("Planner");
                });

            modelBuilder.Entity("RDSUServer.Models.Trainers", b =>
                {
                    b.HasOne("RDSUServer.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
